#!/bin/bash

# Load environment variables from .env file (you must be running the script from the root of the project)
[ ! -f .env ] || export $(grep -v '^#' .env | xargs)

# API URL
url=$FEED_URL

# if FEED_URL is not set, exit with a message
if [ -z "$url" ]; then
  echo "FEED_URL is not set. Please set it in the project .env file."
  echo "Enter the ThwopZap API url:"
  read url
fi

# Static token for authentication
auth_token=$AUTH_TOKEN

# if auth_token is not set, request it
if [ -z "$auth_token" ]; then
  echo "Enter your authentication token:"
  read auth_token
fi

username=$USERNAME

# if username is not set, request it
if [ -z "$username" ]; then
  echo "Enter your username:"
  read username
fi

# Function to send a message
send_message() {
  echo "Enter your message:"
  read message

  # Convert message and username to JSON format
  json_payload=$(jq -n \
    --arg user "$username" \
    --arg msg "$message" \
    '{text: $msg, userName: $user}')

  # Send POST request to the API
  response=$(curl -X POST $url \
    -H "Content-Type: application/json" \
    -H "Authorization: $auth_token" \
    -d "$json_payload")

  echo "Response from server: $response"
}

# Function to get messages
get_messages() {
  # Send GET request to the API
  response=$(curl -s -X GET $url \
    -H "Authorization: $auth_token")

  echo $response | jq -r '.[] | "\(.userName): \(.text) [\(.createdAt)]"'
}

# Check command argument
case "$1" in
  send)
    send_message
    ;;
  get)
    get_messages
    ;;
  *)
    echo "Usage: printer-hub [get|send]"
    exit 1
    ;;
esac
